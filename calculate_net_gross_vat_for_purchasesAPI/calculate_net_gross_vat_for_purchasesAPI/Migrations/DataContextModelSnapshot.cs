// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using calculate_net_gross_vat_for_purchasesAPI.Data;

#nullable disable

namespace calculatenetgrossvatforpurchasesAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("calculate_net_gross_vat_for_purchasesAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Initials = "PT",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 2,
                            Initials = "UK",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 3,
                            Initials = "ES",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 4,
                            Initials = "FR",
                            Name = "France"
                        });
                });

            modelBuilder.Entity("calculate_net_gross_vat_for_purchasesAPI.Models.VATRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("VATRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Rate = 6f
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Rate = 13f
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Rate = 23f
                        });
                });

            modelBuilder.Entity("calculate_net_gross_vat_for_purchasesAPI.Models.VATRate", b =>
                {
                    b.HasOne("calculate_net_gross_vat_for_purchasesAPI.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
